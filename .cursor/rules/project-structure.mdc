---
description:
globs:
alwaysApply: false
---
# Everly Backend Project Structure

## Overview
The Everly backend is organized as a FastAPI application with MongoDB and Redis for data storage and caching. The project follows a modular structure with clear separation of concerns.

## Directory Structure
- `app/` - Main application code
  - `api/` - API routes and endpoint handlers
  - `core/` - Core application settings and configuration
  - `db/` - Database models and connection management
  - `services/` - Business logic and services
  - `schemas/` - Pydantic schemas for request/response validation
  - `utils/` - Utility functions and helpers
- `tests/` - Test files mirroring the application structure
- `alembic/` - Database migration scripts
- `scripts/` - Utility scripts for development and deployment

## Entry Points
- `main.py` - Main application entry point
- `config.py` - Configuration loading and environment variables

## Dependency Management
- `requirements.txt` - Production dependencies
- `requirements-dev.txt` - Development dependencies

